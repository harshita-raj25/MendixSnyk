// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package oidc.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	/**
	 * @deprecated
	 * The default constructor of the Microflows class should not be used.
	 * Use the static microflow invocation methods instead.
	 */
	@java.lang.Deprecated(since = "9.12", forRemoval = true)
	public Microflows() {}

	// These are the microflows for the OIDC module
	public static administration.proxies.Account aCT_Account_RetrieveAccount(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("OIDC.ACT_Account_RetrieveAccount").withParams(params).execute(context);
		return result == null ? null : administration.proxies.Account.initialize(context, result);
	}
	public static void aCT_DecodeIDToken(IContext context, oidc.proxies.Token _token)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Token", _token == null ? null : _token.getMendixObject());
		Core.microflowCall("OIDC.ACT_DecodeIDToken").withParams(params).execute(context);
	}
	public static void aCT_ImportConfiguration(IContext context, oidc.proxies.ClientConfiguration _clientConfiguration)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("ClientConfiguration", _clientConfiguration == null ? null : _clientConfiguration.getMendixObject());
		Core.microflowCall("OIDC.ACT_ImportConfiguration").withParams(params).execute(context);
	}
	public static java.util.List<mxmodelreflection.proxies.Microflows> aCT_Microflows_GETCustomMicroflowsList(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		java.util.List<IMendixObject> objs = Core.microflowCall("OIDC.ACT_Microflows_GETCustomMicroflowsList").withParams(params).execute(context);
		if (objs == null) {
			return null;
		} else {
			return objs.stream()
				.map(obj -> mxmodelreflection.proxies.Microflows.initialize(context, obj))
				.collect(java.util.stream.Collectors.toList());
		}
	}
	public static void aCT_NewClaim(IContext context, oidc.proxies.ClaimSet _claimSet)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("ClaimSet", _claimSet == null ? null : _claimSet.getMendixObject());
		Core.microflowCall("OIDC.ACT_NewClaim").withParams(params).execute(context);
	}
	public static void aCT_NewScope(IContext context, oidc.proxies.ScopeSet _scopeSet)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("ScopeSet", _scopeSet == null ? null : _scopeSet.getMendixObject());
		Core.microflowCall("OIDC.ACT_NewScope").withParams(params).execute(context);
	}
	public static void aCT_RefreshToken(IContext context, oidc.proxies.Token _token)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Token", _token == null ? null : _token.getMendixObject());
		Core.microflowCall("OIDC.ACT_RefreshToken").withParams(params).execute(context);
	}
	public static void aCT_SaveConfiguration(IContext context, oidc.proxies.ClientConfigHelper _clientConfigHelper)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("ClientConfigHelper", _clientConfigHelper == null ? null : _clientConfigHelper.getMendixObject());
		Core.microflowCall("OIDC.ACT_SaveConfiguration").withParams(params).execute(context);
	}
	public static void aCT_SetDefault(IContext context, oidc.proxies.ClientConfiguration _clientConfiguration)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("ClientConfiguration", _clientConfiguration == null ? null : _clientConfiguration.getMendixObject());
		Core.microflowCall("OIDC.ACT_SetDefault").withParams(params).execute(context);
	}
	public static void aCT_ShowCusomExceptionMessage(IContext context, system.proxies.HttpResponse _httpResponse, java.lang.String _redirectTo)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("httpResponse", _httpResponse == null ? null : _httpResponse.getMendixObject());
		params.put("redirectTo", _redirectTo);
		Core.microflowCall("OIDC.ACT_ShowCusomExceptionMessage").withParams(params).execute(context);
	}
	public static void aCT_ToggleActive(IContext context, oidc.proxies.ClientConfiguration _clientConfiguration)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("ClientConfiguration", _clientConfiguration == null ? null : _clientConfiguration.getMendixObject());
		Core.microflowCall("OIDC.ACT_ToggleActive").withParams(params).execute(context);
	}
	public static boolean aCT_Token_CustomATPRetrieveRoles(IContext context, administration.proxies.Account _account)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Account", _account == null ? null : _account.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("OIDC.ACT_Token_CustomATPRetrieveRoles").withParams(params).execute(context);
	}
	public static boolean aCT_Token_RetrieveRoles(IContext context, administration.proxies.Account _account)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Account", _account == null ? null : _account.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("OIDC.ACT_Token_RetrieveRoles").withParams(params).execute(context);
	}
	public static boolean bCO_Account_ProcessRolesToken(IContext context, java.util.List<system.proxies.UserRole> _userRoleList, administration.proxies.Account _account)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		java.util.List<IMendixObject> listparam_userRoleList = null;
		if (_userRoleList != null)
		{
			listparam_userRoleList = new java.util.ArrayList<>();
			for (var obj : _userRoleList) {
				listparam_userRoleList.add(obj.getMendixObject());
			}
		}
		params.put("UserRoleList", listparam_userRoleList);

		params.put("Account", _account == null ? null : _account.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("OIDC.BCO_Account_ProcessRolesToken").withParams(params).execute(context);
	}
	public static boolean checkNonceValue(IContext context, oidc.proxies.AuthAttempt _authAttempt, java.lang.String _id_token)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("AuthAttempt", _authAttempt == null ? null : _authAttempt.getMendixObject());
		params.put("Id_token", _id_token);
		return (java.lang.Boolean) Core.microflowCall("OIDC.CheckNonceValue").withParams(params).execute(context);
	}
	public static void cleanupOldAuthAttempts(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("OIDC.CleanupOldAuthAttempts").withParams(params).execute(context);
	}
	public static administration.proxies.Account cUSTOM_UserProvisioning(IContext context, oidc.proxies.Token _oAuthToken)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("OAuthToken", _oAuthToken == null ? null : _oAuthToken.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("OIDC.CUSTOM_UserProvisioning").withParams(params).execute(context);
		return result == null ? null : administration.proxies.Account.initialize(context, result);
	}
	public static java.lang.String decodeAndVerifyJWT(IContext context, oidc.proxies.Token _token)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Token", _token == null ? null : _token.getMendixObject());
		return (java.lang.String) Core.microflowCall("OIDC.DecodeAndVerifyJWT").withParams(params).execute(context);
	}
	public static system.proxies.HttpResponse dELETE(IContext context, oidc.proxies.Token _token, java.lang.String _request, java.lang.String _location)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Token", _token == null ? null : _token.getMendixObject());
		params.put("Request", _request);
		params.put("Location", _location);
		IMendixObject result = (IMendixObject)Core.microflowCall("OIDC.DELETE").withParams(params).execute(context);
		return result == null ? null : system.proxies.HttpResponse.initialize(context, result);
	}
	public static void dELETEME_ResetScopes(IContext context, oidc.proxies.ClientConfiguration _clientConfiguration)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("ClientConfiguration", _clientConfiguration == null ? null : _clientConfiguration.getMendixObject());
		Core.microflowCall("OIDC.DELETEME_ResetScopes").withParams(params).execute(context);
	}
	public static void dS_ClientConfigHelper_Edit(IContext context, oidc.proxies.ClientConfiguration _clientConfiguration)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("ClientConfiguration", _clientConfiguration == null ? null : _clientConfiguration.getMendixObject());
		Core.microflowCall("OIDC.DS_ClientConfigHelper_Edit").withParams(params).execute(context);
	}
	public static void dS_ClientConfigHelper_New(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("OIDC.DS_ClientConfigHelper_New").withParams(params).execute(context);
	}
	public static system.proxies.HttpResponse gET(IContext context, java.lang.String _request, oidc.proxies.Token _token)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Request", _request);
		params.put("Token", _token == null ? null : _token.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("OIDC.GET").withParams(params).execute(context);
		return result == null ? null : system.proxies.HttpResponse.initialize(context, result);
	}
	public static java.lang.String getAuthorizationURL(IContext context, oidc.proxies.ENU_DeviceProfile _deviceType, java.lang.String _clientConfigAlias, java.lang.String _returnUrl)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DeviceType", _deviceType == null ? null : _deviceType.name());
		params.put("ClientConfigAlias", _clientConfigAlias);
		params.put("ReturnUrl", _returnUrl);
		return (java.lang.String) Core.microflowCall("OIDC.GetAuthorizationURL").withParams(params).execute(context);
	}
	public static oidc.proxies.Token getCurrentToken(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("OIDC.GetCurrentToken").withParams(params).execute(context);
		return result == null ? null : oidc.proxies.Token.initialize(context, result);
	}
	public static java.lang.String getDefaultAuthorizationURL(IContext context, oidc.proxies.ENU_DeviceProfile _deviceType, java.lang.String _returnUrl)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DeviceType", _deviceType == null ? null : _deviceType.name());
		params.put("ReturnUrl", _returnUrl);
		return (java.lang.String) Core.microflowCall("OIDC.GetDefaultAuthorizationURL").withParams(params).execute(context);
	}
	public static oidc.proxies.ClientConfiguration getDefaultClientConfiguration(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("OIDC.GetDefaultClientConfiguration").withParams(params).execute(context);
		return result == null ? null : oidc.proxies.ClientConfiguration.initialize(context, result);
	}
	public static boolean getNewAccessTokenUsingRefreshToken(IContext context, oidc.proxies.Token _token, oidc.proxies.ClientConfiguration _clientConfiguration)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Token", _token == null ? null : _token.getMendixObject());
		params.put("ClientConfiguration", _clientConfiguration == null ? null : _clientConfiguration.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("OIDC.GetNewAccessTokenUsingRefreshToken").withParams(params).execute(context);
	}
	public static administration.proxies.Account handleAuthorizationCode(IContext context, java.lang.String _code, java.lang.String _state, java.lang.String _error, java.lang.Long _statusCode, java.lang.String _error_description)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("code", _code);
		params.put("state", _state);
		params.put("error", _error);
		params.put("StatusCode", _statusCode);
		params.put("error_description", _error_description);
		IMendixObject result = (IMendixObject)Core.microflowCall("OIDC.handleAuthorizationCode").withParams(params).execute(context);
		return result == null ? null : administration.proxies.Account.initialize(context, result);
	}
	public static java.lang.String loginEndpoint(IContext context, system.proxies.HttpRequest _httpRequest, system.proxies.HttpResponse _httpResponse, java.lang.String _cont, java.lang.String _idp)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("httpRequest", _httpRequest == null ? null : _httpRequest.getMendixObject());
		params.put("httpResponse", _httpResponse == null ? null : _httpResponse.getMendixObject());
		params.put("cont", _cont);
		params.put("idp", _idp);
		return (java.lang.String) Core.microflowCall("OIDC.loginEndpoint").withParams(params).execute(context);
	}
	public static void mergeTokenData(IContext context, oidc.proxies.Token _token, oidc.proxies.OAuthTokenResponse _tokenResponse)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Token", _token == null ? null : _token.getMendixObject());
		params.put("TokenResponse", _tokenResponse == null ? null : _tokenResponse.getMendixObject());
		Core.microflowCall("OIDC.MergeTokenData").withParams(params).execute(context);
	}
	public static java.lang.String mobileCallback(IContext context, java.lang.String _code, java.lang.String _state, java.lang.String _error, java.lang.String _error_description)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("code", _code);
		params.put("state", _state);
		params.put("error", _error);
		params.put("error_description", _error_description);
		return (java.lang.String) Core.microflowCall("OIDC.mobileCallback").withParams(params).execute(context);
	}
	public static system.proxies.HttpResponse pATCH(IContext context, oidc.proxies.Token _token, java.lang.String _request, java.lang.String _location)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Token", _token == null ? null : _token.getMendixObject());
		params.put("Request", _request);
		params.put("Location", _location);
		IMendixObject result = (IMendixObject)Core.microflowCall("OIDC.PATCH").withParams(params).execute(context);
		return result == null ? null : system.proxies.HttpResponse.initialize(context, result);
	}
	public static system.proxies.HttpResponse pOST(IContext context, java.lang.String _location, java.lang.String _request, oidc.proxies.Token _token)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Location", _location);
		params.put("Request", _request);
		params.put("Token", _token == null ? null : _token.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("OIDC.POST").withParams(params).execute(context);
		return result == null ? null : system.proxies.HttpResponse.initialize(context, result);
	}
	public static system.proxies.HttpResponse pUT(IContext context, java.lang.String _location, java.lang.String _request, oidc.proxies.Token _token)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Location", _location);
		params.put("Request", _request);
		params.put("Token", _token == null ? null : _token.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("OIDC.PUT").withParams(params).execute(context);
		return result == null ? null : system.proxies.HttpResponse.initialize(context, result);
	}
	public static java.lang.String sUB_BuildClaimString(IContext context, oidc.proxies.ClientConfiguration _clientConfiguration)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("ClientConfiguration", _clientConfiguration == null ? null : _clientConfiguration.getMendixObject());
		return (java.lang.String) Core.microflowCall("OIDC.SUB_BuildClaimString").withParams(params).execute(context);
	}
	public static java.lang.String sUB_BuildScopeString(IContext context, oidc.proxies.ClientConfiguration _clientConfiguration)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("ClientConfiguration", _clientConfiguration == null ? null : _clientConfiguration.getMendixObject());
		return (java.lang.String) Core.microflowCall("OIDC.SUB_BuildScopeString").withParams(params).execute(context);
	}
	public static java.lang.String sUB_GetCallbackURL(IContext context, oidc.proxies.ENU_DeviceProfile _deviceType, oidc.proxies.ClientConfiguration _clientConfiguration)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DeviceType", _deviceType == null ? null : _deviceType.name());
		params.put("ClientConfiguration", _clientConfiguration == null ? null : _clientConfiguration.getMendixObject());
		return (java.lang.String) Core.microflowCall("OIDC.SUB_GetCallbackURL").withParams(params).execute(context);
	}
	public static java.lang.String sUB_GetLogoutURL(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		return (java.lang.String) Core.microflowCall("OIDC.SUB_GetLogoutURL").withParams(params).execute(context);
	}
	public static administration.proxies.Account userProvisioning_Salesforce(IContext context, oidc.proxies.Token _oAuthToken, java.lang.String _openIDTokenJSON)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("OAuthToken", _oAuthToken == null ? null : _oAuthToken.getMendixObject());
		params.put("OpenIDTokenJSON", _openIDTokenJSON);
		IMendixObject result = (IMendixObject)Core.microflowCall("OIDC.UserProvisioning_Salesforce").withParams(params).execute(context);
		return result == null ? null : administration.proxies.Account.initialize(context, result);
	}
	public static administration.proxies.Account userProvisioning_Sample(IContext context, oidc.proxies.Token _oAuthToken)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("OAuthToken", _oAuthToken == null ? null : _oAuthToken.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("OIDC.UserProvisioning_Sample").withParams(params).execute(context);
		return result == null ? null : administration.proxies.Account.initialize(context, result);
	}
	public static administration.proxies.Account userProvisioning_StandardOIDC(IContext context, oidc.proxies.Token _oAuthToken, java.lang.String _openIDTokenJSON)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("OAuthToken", _oAuthToken == null ? null : _oAuthToken.getMendixObject());
		params.put("OpenIDTokenJSON", _openIDTokenJSON);
		IMendixObject result = (IMendixObject)Core.microflowCall("OIDC.UserProvisioning_StandardOIDC").withParams(params).execute(context);
		return result == null ? null : administration.proxies.Account.initialize(context, result);
	}
	public static administration.proxies.Account userProvisioning_UserInfo(IContext context, oidc.proxies.Token _oAuthToken, java.lang.String _openIDTokenJSON)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("OAuthToken", _oAuthToken == null ? null : _oAuthToken.getMendixObject());
		params.put("OpenIDTokenJSON", _openIDTokenJSON);
		IMendixObject result = (IMendixObject)Core.microflowCall("OIDC.UserProvisioning_UserInfo").withParams(params).execute(context);
		return result == null ? null : administration.proxies.Account.initialize(context, result);
	}
	public static void webCallback(IContext context, system.proxies.HttpRequest _httpRequest, system.proxies.HttpResponse _httpResponse, java.lang.String _code, java.lang.String _state, java.lang.String _error, java.lang.String _error_description)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("httpRequest", _httpRequest == null ? null : _httpRequest.getMendixObject());
		params.put("httpResponse", _httpResponse == null ? null : _httpResponse.getMendixObject());
		params.put("code", _code);
		params.put("state", _state);
		params.put("error", _error);
		params.put("error_description", _error_description);
		Core.microflowCall("OIDC.webCallback").withParams(params).execute(context);
	}
	public static void webCallback_POST(IContext context, system.proxies.HttpRequest _httpRequest, system.proxies.HttpResponse _httpResponse)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("httpRequest", _httpRequest == null ? null : _httpRequest.getMendixObject());
		params.put("httpResponse", _httpResponse == null ? null : _httpResponse.getMendixObject());
		Core.microflowCall("OIDC.webCallback_POST").withParams(params).execute(context);
	}
}
